* Explain: Vector Clocks/Version Vectors                         :Concept:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
#+EXPORT_EXCLUDE_TAGS: exclude noexport BLOG
:PROPERTIES:
:type: systemdesign, designservice
:END:
---------------------------------------------------------------------
Explain: What vector clocks/version vectors are
---------------------------------------------------------------------
Similar Posts:
- [[https://architect.dennyzhang.com/design-concept][Concepts For System Design]]
- Tag: [[https://architect.dennyzhang.com/tag/systemdesign][#systemdesign]]
---------------------------------------------------------------------
#+BEGIN_HTML
<div id="the whole thing" style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/DennyZhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>

<a href="https://github.com/dennyzhang/architect.dennyzhang.com"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML

Vector clocks is an algorithm for generating a partial ordering of events in a distributed system and *detecting causality violations*. [[url-external:https://en.wikipedia.org/wiki/Vector_clock][See in wikipedia]]

[[image-blog:Explain: Vector Clocks/Version Vectors][https://raw.githubusercontent.com/dennyzhang/images/master/design/vector-clock.png]]

- Vector clocks/version vectors are about detecting conflicting/updates ...
- ... but says nothing about how to resolve those conflicts.

Many NoSQL DB choose vector clock to control the ordering of multi-version records.
---------------------------------------------------------------------
Q: Why we can't use machines' timestamp to version changes in distributed system?

A: Using the physical timestamp of a record is no good because you can't guarantee that time will move forward in a uniform manner across all nodes in the cluster.

It means a 'later' record might have an earlier timestamp than some record produced before it.
---------------------------------------------------------------------
Q: What is Lamport Clock?

A: Lamport Clock can be considered as a logical timestamp. A Lamport Clock is a single integer value that is passed around the cluster with every message sent between nodes. 

Each node keeps a record of what it thinks the latest (i.e. highest) Lamport Clock value is, and if it hears a larger value from some other node, it updates its own value.

[[image-blog:Explain: Vector Clocks/Version Vectors][https://raw.githubusercontent.com/dennyzhang/images/master/design/lamport-sample.jpg]]
---------------------------------------------------------------------
Q: What are the difference in between of Lamport Clock and Vector Clock?

last-write-win issue.

TODO:
---------------------------------------------------------------------
Q: Problems with vector clocks?

[[url-external:https://www.datastax.com/dev/blog/why-cassandra-doesnt-need-vector-clocks][Why Cassandra doesn't need vector clocks]]

Cassandra breaks a row up into columns that can be updated independently.
---------------------------------------------------------------------

Related Readings:
- [[url-external:https://goo.gl/Nx77nZ][Why do distributed databases choose the Vector Clock...]]
** misc                                                            :noexport:
https://www.cnblogs.com/bangerlee/p/5448766.html

通过Lamport timestamps可以建立事件的全序关系，通过Vector clock可以比较任意两个事件的顺序关系并且能表示无因果关系的事件，将Vector clock的方法用于发现数据版本冲突，于是有了Version vector。

https://www.cnblogs.com/foxmailed/archive/2012/01/11/2319854.html
https://www.zhihu.com/question/19994133
