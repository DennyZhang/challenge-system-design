* Deep Dive Into TCP/UDP Protocol                                   :Concept:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
#+EXPORT_EXCLUDE_TAGS: exclude noexport BLOG
:PROPERTIES:
:type: systemdesign, designconcept
:END:
---------------------------------------------------------------------
Deep Dive Into TCP/UDP Protocol
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/architect.dennyzhang.com/tree/master/concept/explain-tcp-udp"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Posts:
- [[https://architect.dennyzhang.com/design-concept][Concepts For System Design]]
- Tag: [[https://architect.dennyzhang.com/tag/systemdesign][#systemdesign]]
---------------------------------------------------------------------
Q: Difference between socket VS TCP?

A: Socket are a method of IPC that allow data to be exchanged between applications. Socket connection implies two peer connected with each other, Protocol can be TCP, UDP or others.

[[image-blog:TCP/IP Network][https://raw.githubusercontent.com/dennyzhang/architect.dennyzhang.com/master/concept/explain-tcp-udp/tcp.jpg]]

[[https://stackoverflow.com/questions/6419811/any-difference-between-socket-connection-and-tcp-connection][Link: Any difference between socket connection and tcp connection?]]

Q: TCP establish connection: 3-way handshakes

A:
[[image-blog:TCP 3-way handshake][https://raw.githubusercontent.com/dennyzhang/architect.dennyzhang.com/master/concept/explain-tcp-udp/tcp-establish.png]]

Q: To establish TCP connection, why not only 2-way handshakes, instead of 3-way handshakes?

A: TCP is a bi-directional communication protocol, which means either end ought to be able to send data reliably.

[[https://networkengineering.stackexchange.com/questions/24068/why-do-we-need-a-3-way-handshake-why-not-just-2-way][Link: Why do we need a 3-way handshake? Why not just 2-way?]]

Q: TCP terminate connection: 4-way handshake

A: 
[[image-blog:TCP 3-way handshake][https://raw.githubusercontent.com/dennyzhang/architect.dennyzhang.com/master/concept/explain-tcp-udp/tcp-terminate.png]]

Q: Why 3-way handshakes for establish a TCP connection, but 4-way for terminate a TCP connection?

A: Like SYN-ACK, why not having a FIN-ACK segment?

TCP is a bidirectional and full-duplex protocol.

When establishing bidirectional connection, SYN(request opening the source end) is the natural next step of ACK(acknowledge opening the server end). So combining them as one SYN-ACK is a safe performance tuning.

However when client requests terminating connection, server may have some data haven't got enough time sending to the client.

Two use cases when client have to terminate a TCP connection.
1. Server doesn't have unsent data. In this case, server can merge FIN(request closing the source end) and ACK(acknowledge closing the server end) as one package.
2. Server has unsent data. The data need to be sent to client, before terminating the connection. In this case, FIN and ACK can't be merged.

[[https://stackoverflow.com/questions/46212623/why-tcp-connect-termination-need-4-way-handshake][Link: Why tcp connect termination need 4-way-handshake?]]

Q: After terminating a TCP connection, why socket state would be set to =TIME_WAIT=?

A: The purpose of =TIME_WAIT= is to allow the networking to distinguish packets that arrive as belong to the "old, existing" connection from a new one. 

Q: How does TCP sliding window work for congestion control?

A: TODO


Q: TCP VS UDP?

A: Both TCP and UDP are popular transport-layer protocols.

- Reliable or not: TCP is a reliable, bi-directional communication protocol
- Connections: UDP doesn't need to establish and terminate connections for communication
- UDP permit broadcasting and multicasting; UDP server can receive(and reply to) datagrams from multiple clients
- TCP provide guarantees about in-order delivery

* org-mode configuration                                           :noexport:
#+STARTUP: overview customtime noalign logdone showall
#+DESCRIPTION:
#+KEYWORDS:
#+LATEX_HEADER: \usepackage[margin=0.6in]{geometry}
#+LaTeX_CLASS_OPTIONS: [8pt]
#+LATEX_HEADER: \usepackage[english]{babel}
#+LATEX_HEADER: \usepackage{lastpage}
#+LATEX_HEADER: \usepackage{fancyhdr}
#+LATEX_HEADER: \pagestyle{fancy}
#+LATEX_HEADER: \fancyhf{}
#+LATEX_HEADER: \rhead{Updated: \today}
#+LATEX_HEADER: \rfoot{\thepage\ of \pageref{LastPage}}
#+LATEX_HEADER: \lfoot{\href{https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-leetcode-A4}{GitHub: https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-leetcode-A4}}
#+LATEX_HEADER: \lhead{\href{https://cheatsheet.dennyzhang.com/cheatsheet-slack-A4}{Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4}}
#+AUTHOR: Denny Zhang
#+EMAIL:  denny@dennyzhang.com
#+TAGS: noexport(n)
#+PRIORITIES: A D C
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_EXCLUDE_TAGS: exclude noexport
#+SEQ_TODO: TODO HALF ASSIGN | DONE BYPASS DELEGATE CANCELED DEFERRED
#+LINK_UP:
#+LINK_HOME:
