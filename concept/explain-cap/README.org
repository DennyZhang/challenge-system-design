* [#A] Explain CAP Theorem                                       :Concept:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
#+EXPORT_EXCLUDE_TAGS: exclude noexport BLOG
:PROPERTIES:
:type: systemdesign, designconcept
:END:
---------------------------------------------------------------------
CAP Theorem
---------------------------------------------------------------------
Similar Posts:
- [[https://architect.dennyzhang.com/explain-nosql][DB: SQL and NoSQL]]
- [[https://architect.dennyzhang.com/design-concept][Concepts For System Design]]
- Tag: [[https://architect.dennyzhang.com/tag/systemdesign][#systemdesign]]
---------------------------------------------------------------------
#+BEGIN_HTML
<div id="the whole thing" style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/DennyZhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>

<a href="https://github.com/dennyzhang/architect.dennyzhang.com/tree/master/concept/explain-cap"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML

Q: What is CAP Theorem?

[[url-external:https://en.wikipedia.org/wiki/CAP_theorem][wikipedia link]]:
| Name                | Summary                                                                |
|---------------------+------------------------------------------------------------------------|
| Consistency         | All nodes see the same data at the same time                           |
| Availability        | Every request receives a response                                      |
| Partition tolerance | System continues to function even if communication fails between nodes |

What does CAP Theorem tell us?

It is impossible for a web service to provide the three following guarantees : Consistency, Availability and Partition-tolerance.

When network partition happens, you can only choose either consistency or availability. Not both. [[http://ksat.me/a-plain-english-introduction-to-cap-theorem/][link]]

[[image-blog:Explain CAP Theorem][https://raw.githubusercontent.com/dennyzhang/architect.dennyzhang.com/master/concept/explain-cap/cap.png]]

To be consistent, all nodes should see the same set of updates in the same order.
---------------------------------------------------------------------
Q: Does it mean I can only get two of CAP?

CAP is frequently misunderstood as if one has to choose to abandon one of the three guarantees at all times.

In fact, the choice is really between consistency and availability only when a network partition or failure happens; at all other times, no trade-off has to be made.

- Traditional RDMBS usually choose consistency over availability. 
- NoSQL DB choose availability over consistency.

CP - consistency and partition tolerance
Waiting for a response from the partitioned node might result in a timeout error. CP is a good choice if your business needs require atomic reads and writes.

AP - availability and partition tolerance
Responses return the most recent version of the data available on a node, which might not be the latest. Writes might take some time to propagate when the partition is resolved.

AP is a good choice if the business needs allow for eventual consistency or when the system needs to continue working despite external errors.
---------------------------------------------------------------------
Q: What is BASE?

Basically Available, Soft State, Eventual Consistency
---------------------------------------------------------------------
Q: Different types of consistency models?

| Name                   | Summary |
|------------------------+---------|
| Strong consistency     |         |
| Sequential consistency |         |
| Eventual consistency   |         |
| Weak consistency       |         |

---------------------------------------------------------------------
** misc                                                            :noexport:

* org-mode configuration                                           :noexport:
#+STARTUP: overview customtime noalign logdone showall
#+DESCRIPTION:
#+KEYWORDS:
#+LATEX_HEADER: \usepackage[margin=0.6in]{geometry}
#+LaTeX_CLASS_OPTIONS: [8pt]
#+LATEX_HEADER: \usepackage[english]{babel}
#+LATEX_HEADER: \usepackage{lastpage}
#+LATEX_HEADER: \usepackage{fancyhdr}
#+LATEX_HEADER: \pagestyle{fancy}
#+LATEX_HEADER: \fancyhf{}
#+LATEX_HEADER: \rhead{Updated: \today}
#+LATEX_HEADER: \rfoot{\thepage\ of \pageref{LastPage}}
#+LATEX_HEADER: \lfoot{\href{https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-leetcode-A4}{GitHub: https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-leetcode-A4}}
#+LATEX_HEADER: \lhead{\href{https://cheatsheet.dennyzhang.com/cheatsheet-slack-A4}{Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4}}
#+AUTHOR: Denny Zhang
#+EMAIL:  denny@dennyzhang.com
#+TAGS: noexport(n)
#+PRIORITIES: A D C
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_EXCLUDE_TAGS: exclude noexport
#+SEQ_TODO: TODO HALF ASSIGN | DONE BYPASS DELEGATE CANCELED DEFERRED
#+LINK_UP:
#+LINK_HOME:
* TODO http://www.cnblogs.com/bangerlee/p/5328888.html           :noexport:
